{"version":3,"sources":["../node_modules/isobject/index.js","index.js"],"names":["isObject","val","Array","isArray","obj","acc","fn","o","s","Object","keys","forEach","k","path","push","undefined"],"mappings":";AASC,aAFc,SAASA,EAASC,GACxBA,OAAO,MAAPA,GAA8B,iBAARA,IAA2C,IAAvBC,MAAMC,QAAQF,GAChE,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACSA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlBD,IAAA,EAAA,EAAA,QAAA,aAkBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhBc,IAAA,EAAA,SAACG,GAAKC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAelBA,OAdI,SAALC,EAAMC,EAAGC,GACTN,SAAAA,MAAMC,QAAQI,MAAM,EAASA,EAAAA,SAAAA,KACxBE,OAAOC,KAAKH,GAAGI,QAAQ,SAACC,GACvBC,IAAAA,EAAOL,EAAIN,MAAMC,QAAQI,GAAQC,GAAAA,OAAAA,EAAKI,KAAAA,OAAAA,EAAUJ,KAAAA,GAAAA,OAAAA,EAAKI,KAAAA,OAAAA,GAAMA,GAG/B,IAAnBN,EAAGC,EAAEK,GAAIC,IACVR,EAAIS,KAAKD,KAM7BP,CAAGF,OAAKW,GACDV,GACR,QAAA,QAAA","file":"index.js","sourceRoot":"../src","sourcesContent":["/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nexport default function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","import isObject from 'isobject';\n\nexport default (obj, acc = []) => {\n  const fn = (o, s) => {\n    if (Array.isArray(o) || isObject(o)) {\n      return Object.keys(o).forEach((k) => {\n        const path = s ? Array.isArray(o) ? `${s}[${k}]` : `${s}.${k}` : k;\n\n        // If it's not a leaf it return an array of trues. So we have to check isLeaf === true.\n        const isLeaf = fn(o[k], path) === false;\n        if (isLeaf) { acc.push(path); }\n      });\n    }\n    return false;\n  };\n\n  fn(obj, undefined);\n  return acc;\n};\n"]}